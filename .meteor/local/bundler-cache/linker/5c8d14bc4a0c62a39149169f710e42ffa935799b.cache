[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"collections\":{\"notifications.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// lib/collections/notifications.js                                                                //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nNotifications = new Mongo.Collection('notifications');                                             // 1\n                                                                                                   //\nNotifications.allow({                                                                              // 3\n  update: function update(userId, doc, fieldNames) {                                               // 4\n    return ownsDocument(userId, doc) && fieldNames.length === 1 && fieldNames[0] === 'read';       // 5\n  }                                                                                                // 7\n});                                                                                                // 3\n                                                                                                   //\ncreateTwiitNotification = function createTwiitNotification(twiitNotifId) {                         // 10\n  var twiit = Twitts.findOne(twiitNotifId);                                                        // 11\n                                                                                                   //\n  Notifications.insert({                                                                           // 13\n    twiitMessage: twiit.message,                                                                   // 14\n    twiitId: twiit._id,                                                                            // 15\n    twiitNotifUserName: twiit.user,                                                                // 16\n    twiitTimeStamp: twiit.timestamp,                                                               // 17\n    read: false                                                                                    // 18\n  });                                                                                              // 13\n};                                                                                                 // 20\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tweets.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// lib/collections/tweets.js                                                                       //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nTwitts = new Meteor.Collection('twitts');                                                          // 1\nRelationships = new Meteor.Collection('relationships');                                            // 2\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"router.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// lib/router.js                                                                                   //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nRouter.route('/', { name: 'userManagement' });                                                     // 1\nRouter.route('/whoToFollow', { name: 'followUsers' });                                             // 2\nRouter.route('/myProfile', { name: 'userProfile' });                                               // 3\n                                                                                                   //\nRouter.configure({                                                                                 // 5\n\twaitOn: function waitOn() {                                                                       // 6\n\t\treturn Meteor.subscribe('notifications');                                                        // 7\n\t}                                                                                                 // 8\n});                                                                                                // 5\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"userUtils.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// lib/userUtils.js                                                                                //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nUserUtils = function UserUtils() {}; //no var in front                                             // 1\n                                                                                                   //\nUserUtils.findTweets = function (username) {                                                       // 3\n  var currentTweets = Twitts.find({ user: username }).fetch().map(function (data) {                // 4\n    return data.following;                                                                         // 5\n  });                                                                                              // 6\n  console.log(\"Tweets: \");                                                                         // 7\n  console.log(currentTweets);                                                                      // 8\n                                                                                                   //\n  return currentTweets;                                                                            // 10\n};                                                                                                 // 11\n                                                                                                   //\nUserUtils.findFollowings = function (username) {                                                   // 13\n  var currentFollowings = Relationships.find({ follower: username }).fetch().map(function (data) {\n    return data.following;                                                                         // 15\n  });                                                                                              // 16\n  console.log(\"Siguiendo: \");                                                                      // 17\n  console.log(currentFollowings);                                                                  // 18\n                                                                                                   //\n  return currentFollowings;                                                                        // 20\n};                                                                                                 // 21\n                                                                                                   //\nUserUtils.findFollowers = function (username) {                                                    // 23\n  var currentFollowers = Relationships.find({ following: username }).fetch().map(function (data) {\n    return data.following;                                                                         // 25\n  });                                                                                              // 26\n  console.log(\"Seguidores: \");                                                                     // 27\n  console.log(currentFollowers);                                                                   // 28\n                                                                                                   //\n  return currentFollowers;                                                                         // 30\n};                                                                                                 // 31\n                                                                                                   //\n//FORZAMOS LA REACTIVIDAD                                                                          //\nUserUtils.observerProperties = function () {                                                       // 34\n  Twitts.find().observeChanges({                                                                   // 35\n    changed: function changed() {                                                                  // 36\n      console.log(\"Se han detectado cambios!\");                                                    // 37\n    },                                                                                             // 38\n    added: function added(id, doc) {                                                               // 39\n      console.log(doc);                                                                            // 40\n      return true;                                                                                 // 41\n    }                                                                                              // 42\n  });                                                                                              // 35\n};                                                                                                 // 44\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"followUsers.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// server/followUsers.js                                                                           //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nMeteor.methods({                                                                                   // 1\n  'findUser': function findUser(username) {                                                        // 2\n    return Meteor.users.findOne({                                                                  // 3\n      username: username                                                                           // 4\n    }, {                                                                                           // 3\n      fields: { 'username': 1 }                                                                    // 6\n    });                                                                                            // 5\n  },                                                                                               // 8\n                                                                                                   //\n  'followUser': function followUser(username) {                                                    // 10\n    Relationships.insert({                                                                         // 11\n      follower: Meteor.user().username,                                                            // 12\n      following: username                                                                          // 13\n    });                                                                                            // 11\n  },                                                                                               // 15\n                                                                                                   //\n  'recommendUsers': function recommendUsers() {                                                    // 17\n    if (Meteor.user()) {                                                                           // 18\n      var currentFollowings = UserUtils.findFollowings(Meteor.user().username);                    // 19\n                                                                                                   //\n      var recUsers = Meteor.users.find({                                                           // 21\n        username: {                                                                                // 22\n          $nin: currentFollowings                                                                  // 23\n        }                                                                                          // 22\n      }, {                                                                                         // 21\n        fields: { 'username': 1 },                                                                 // 26\n        limit: 5                                                                                   // 27\n      }).fetch();                                                                                  // 25\n      return recUsers;                                                                             // 29\n    }                                                                                              // 30\n  }                                                                                                // 31\n});                                                                                                // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"publications.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// server/publications.js                                                                          //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nMeteor.publish('twitts', function () {                                                             // 1\n  if (Meteor.userId) {                                                                             // 2\n    var username = Meteor.users.findOne({ _id: this.userId }).username;                            // 3\n    var currentFollowings = UserUtils.findFollowings(username);                                    // 4\n                                                                                                   //\n    return Twitts.find({ user: { $in: currentFollowings } });                                      // 6\n  }                                                                                                // 7\n});                                                                                                // 8\n                                                                                                   //\nMeteor.publish('twittsProfile', function (username) {                                              // 10\n  if (Meteor.userId) {                                                                             // 11\n    var username = Meteor.users.findOne({ _id: this.userId }).username;                            // 12\n    //var currentFollowings = UserUtils.findFollowings(username);                                  //\n                                                                                                   //\n    //return Twitts.find({user: { $in: currentFollowings }});                                      //\n    return Twitts.find({ user: username });                                                        // 16\n  }                                                                                                // 17\n});                                                                                                // 18\n                                                                                                   //\nMeteor.publish('notifications', function () {                                                      // 20\n  return Notifications.find({ user: this.user, read: false });                                     // 21\n});                                                                                                // 22\n/*                                                                                                 //\nMeteor.publishComposite('twitts', function(username) {                                             //\n  return {                                                                                         //\n    find: function() {                                                                             //\n      // Comprobar los usuarios a los que se está siguiendo                                        //\n      return Relationships.find({ follower: username });                                           //\n    },                                                                                             //\n    children: [{                                                                                   //\n      find: function(relationship) {                                                               //\n        // Encontrar mensajes de los usuarios que se siguen                                        //\n        return Twitts.find({user: relationship.following});                                        //\n      }                                                                                            //\n    }]                                                                                             //\n  }                                                                                                //\n});                                                                                                //\n*/                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tweetBox.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// server/tweetBox.js                                                                              //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nMeteor.methods({                                                                                   // 1\n  'insertTweet': function insertTweet(tweet) {                                                     // 2\n    /*                                                                                             //\n    twiit = _.extend(tweet, {                                                                      //\n       user: Meteor.user().username,                                                               //\n       message: tweet,                                                                             //\n       timestamp: new Date()                                                                       //\n     });                                                                                           //\n     */                                                                                            //\n    twiit = new Object();                                                                          // 10\n    twiit.message = tweet;                                                                         // 11\n    twiit.user = Meteor.user().username;                                                           // 12\n    twiit.timestamp = new Date();                                                                  // 13\n                                                                                                   //\n    if (Meteor.user()) {                                                                           // 15\n      twiit._id = Twitts.insert({                                                                  // 16\n        message: twiit.message,                                                                    // 17\n        username: twiit.user,                                                                      // 18\n        timestamp: twiit.timestamp                                                                 // 19\n      });                                                                                          // 16\n    }                                                                                              // 21\n    createTwiitNotification(twiit._id);                                                            // 22\n  }                                                                                                // 23\n});                                                                                                // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"userManagement.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// server/userManagement.js                                                                        //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nMeteor.methods({                                                                                   // 1\n  'tweetsPublish': function tweetsPublish(username) {                                              // 2\n    console.log(\"Usuario a buscar: \" + username);                                                  // 3\n    console.log(\"Resultado: \");                                                                    // 4\n    var resul = UserUtils.findTweets(Meteor.user().username);                                      // 5\n    return resul.length;                                                                           // 6\n  },                                                                                               // 7\n                                                                                                   //\n  'usersFollowers': function usersFollowers() {                                                    // 9\n    var currentFollowers = UserUtils.findFollowers(Meteor.user().username);                        // 10\n    return currentFollowers.length;                                                                // 11\n  },                                                                                               // 12\n                                                                                                   //\n  'usersFollowings': function usersFollowings() {                                                  // 14\n    var currentFollowings = UserUtils.findFollowings(Meteor.user().username);                      // 15\n                                                                                                   //\n    return currentFollowings.length;                                                               // 17\n  }                                                                                                // 18\n});                                                                                                // 1\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/meteor\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                 //\n// server/main.js                                                                                  //\n//                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                   //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});                        // 1\n                                                                                                   //\nMeteor.startup(function () {                                                                       // 3\n  // code to run on server at startup                                                              //\n  Relationships._ensureIndex({ follower: 1, following: 1 }, { unique: 1 });                        // 5\n                                                                                                   //\n  Twitts.allow({                                                                                   // 7\n    insert: function insert(userId, disconnect) {                                                  // 8\n      return true;                                                                                 // 9\n    }                                                                                              // 10\n  });                                                                                              // 7\n});                                                                                                // 12\n/////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/collections/notifications.js\");\nrequire(\"./lib/collections/tweets.js\");\nrequire(\"./lib/router.js\");\nrequire(\"./lib/userUtils.js\");\nrequire(\"./server/followUsers.js\");\nrequire(\"./server/publications.js\");\nrequire(\"./server/tweetBox.js\");\nrequire(\"./server/userManagement.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/collections/notifications.js","/lib/collections/tweets.js","/lib/router.js","/lib/userUtils.js","/server/followUsers.js","/server/publications.js","/server/tweetBox.js","/server/userManagement.js","/server/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["Notifications = new Mongo.Collection('notifications');\r\n\r\nNotifications.allow({\r\n  update: function(userId, doc, fieldNames) {\r\n    return ownsDocument(userId, doc) &&\r\n      fieldNames.length === 1 && fieldNames[0] === 'read';\r\n  }\r\n});\r\n\r\ncreateTwiitNotification = function(twiitNotifId) {\r\n  var twiit = Twitts.findOne(twiitNotifId);\r\n  \r\n  Notifications.insert({\r\n    twiitMessage: twiit.message,\r\n    twiitId: twiit._id,\r\n    twiitNotifUserName: twiit.user,\r\n    twiitTimeStamp: twiit.timestamp,\r\n    read: false\r\n  });\r\n};","Twitts = new Meteor.Collection('twitts');\r\nRelationships = new Meteor.Collection('relationships');","Router.route('/', {name: 'userManagement'});\r\nRouter.route('/whoToFollow', {name: 'followUsers'});\r\nRouter.route('/myProfile', {name: 'userProfile'});\r\n\r\nRouter.configure({\r\n\twaitOn: function(){\r\n\t\treturn Meteor.subscribe('notifications');\r\n\t}\r\n})","UserUtils = function() {};    //no var in front\r\n\r\nUserUtils.findTweets = function(username) { \r\n  var currentTweets = Twitts.find({ user: username }).fetch().map(function(data) {\r\n    \t\t\t\t\t\t\t\treturn data.following;\r\n  \t\t\t\t\t\t  });\r\n  console.log(\"Tweets: \");\r\n  console.log(currentTweets);\r\n\r\n  return currentTweets;\r\n};\t\r\n\r\nUserUtils.findFollowings = function(username) { \r\n  var currentFollowings = Relationships.find({ follower: username }).fetch().map(function(data) {\r\n    \t\t\t\t\t\t\t\treturn data.following;\r\n  \t\t\t\t\t\t  });\r\n  console.log(\"Siguiendo: \");\r\n  console.log(currentFollowings);\r\n\r\n  return currentFollowings;\r\n};\t\r\n\r\nUserUtils.findFollowers = function(username) { \r\n  var currentFollowers = Relationships.find({ following: username }).fetch().map(function(data) {\r\n    \t\t\t\t\t\t\t\treturn data.following;\r\n  \t\t\t\t\t\t  });\r\n  console.log(\"Seguidores: \");\r\n  console.log(currentFollowers);\r\n\r\n  return currentFollowers;\r\n};\t\r\n\r\n//FORZAMOS LA REACTIVIDAD\r\nUserUtils.observerProperties = function(){\r\n\tTwitts.find().observeChanges({\r\n    changed: function(){\r\n      console.log(\"Se han detectado cambios!\");\r\n    },\r\n    added: function(id, doc) {\r\n      console.log(doc);\r\n      return true;\r\n    }\r\n  })\r\n}","Meteor.methods({ \r\n  'findUser': function(username) {\r\n    return Meteor.users.findOne({\r\n      username: username\r\n    }, {\r\n      fields: { 'username': 1 }\r\n    });\r\n  },\r\n\r\n  'followUser': function(username) {\r\n    Relationships.insert({\r\n      follower: Meteor.user().username,\r\n      following: username\r\n    });\r\n  },\r\n\r\n  'recommendUsers': function() {\r\n\tif (Meteor.user()) {\r\n\t  var currentFollowings = UserUtils.findFollowings(Meteor.user().username);\r\n\r\n\t  var recUsers = Meteor.users.find({\r\n\t    username: {\r\n\t      $nin: currentFollowings\r\n\t    }\r\n\t  }, {\r\n\t    fields: { 'username': 1 },\r\n\t    limit: 5\r\n\t  }).fetch();\r\n\t  return recUsers;\r\n\t}\r\n   }\r\n});\r\n\r\n\r\n","Meteor.publish('twitts', function() {  \r\n  if (Meteor.userId) {\r\n    var username = Meteor.users.findOne({_id: this.userId}).username;\r\n    var currentFollowings = UserUtils.findFollowings(username);\r\n\r\n    return Twitts.find({user: { $in: currentFollowings }});\r\n  }\r\n});\r\n\r\nMeteor.publish('twittsProfile', function(username) {  \r\n  if (Meteor.userId) {\r\n    var username = Meteor.users.findOne({_id: this.userId}).username;\r\n    //var currentFollowings = UserUtils.findFollowings(username);\r\n\r\n    //return Twitts.find({user: { $in: currentFollowings }});\r\n    return Twitts.find({user: username});\r\n  }\r\n});\r\n\r\nMeteor.publish('notifications', function() {\r\n  return Notifications.find({user: this.user, read: false});\r\n});\r\n/*\r\nMeteor.publishComposite('twitts', function(username) {  \r\n  return {\r\n    find: function() {\r\n      // Comprobar los usuarios a los que se está siguiendo\r\n      return Relationships.find({ follower: username });\r\n    },\r\n    children: [{\r\n      find: function(relationship) {\r\n        // Encontrar mensajes de los usuarios que se siguen\r\n        return Twitts.find({user: relationship.following});\r\n      }\r\n    }]\r\n  }\r\n});\r\n*/","Meteor.methods({ \r\n  'insertTweet': function(tweet) {\r\n  \t/*\r\n  \ttwiit = _.extend(tweet, {\r\n      user: Meteor.user().username,\r\n      message: tweet,\r\n      timestamp: new Date()\r\n    });\r\n    */\r\n    twiit = new Object();\r\n    twiit.message = tweet;\r\n    twiit.user = Meteor.user().username;\r\n    twiit.timestamp = new Date();\r\n\r\n    if (Meteor.user()) {\r\n      twiit._id = Twitts.insert({\r\n        message : twiit.message,\r\n        username : twiit.user,\r\n        timestamp : twiit.timestamp \r\n      });\r\n    }\r\n\tcreateTwiitNotification(twiit._id);\r\n  }\r\n});","Meteor.methods({ \r\n  'tweetsPublish': function(username) {\r\n    console.log(\"Usuario a buscar: \" + username);\r\n    console.log(\"Resultado: \");\r\n    var resul =  UserUtils.findTweets(Meteor.user().username);\r\n    return resul.length;\r\n  },\r\n  \r\n  'usersFollowers': function() {\r\n    var currentFollowers = UserUtils.findFollowers(Meteor.user().username);\r\n    return currentFollowers.length;\r\n  },\r\n\r\n  'usersFollowings': function() {\r\n\t  var currentFollowings = UserUtils.findFollowings(Meteor.user().username);\r\n    \r\n    return currentFollowings.length;\r\n  }\r\n});","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n  Relationships._ensureIndex({follower: 1, following: 1}, {unique: 1});\n  \n  Twitts.allow({\n\tinsert: function(userId, disconnect) {\n\t   return true;\n\t}\n  });\n});\n"]}}]
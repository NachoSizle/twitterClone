[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"collections\":{\"tweets.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// lib/collections/tweets.js                                                    //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nTwitts = new Meteor.Collection('twitts');                                       // 1\nRelationships = new Meteor.Collection('relationships');                         // 2\n//////////////////////////////////////////////////////////////////////////////////\n\n}},\"userUtils.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// lib/userUtils.js                                                             //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nUserUtils = function UserUtils() {}; //no var in front                          // 1\n                                                                                //\nUserUtils.findFollowings = function (username) {                                // 3\n  var currentFollowings = Relationships.find({                                  // 4\n    follower: username                                                          // 5\n  }).fetch().map(function (data) {                                              // 4\n    return data.following;                                                      // 7\n  });                                                                           // 8\n                                                                                //\n  currentFollowings.push(Meteor.user().username);                               // 10\n  return currentFollowings;                                                     // 11\n};                                                                              // 12\n//////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"followUsers.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// server/followUsers.js                                                        //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nMeteor.methods({                                                                // 1\n  'findUser': function findUser(username) {                                     // 2\n    return Meteor.users.findOne({                                               // 3\n      username: username                                                        // 4\n    }, {                                                                        // 3\n      fields: { 'username': 1 }                                                 // 6\n    });                                                                         // 5\n  },                                                                            // 8\n                                                                                //\n  'followUser': function followUser(username) {                                 // 10\n    Relationships.insert({                                                      // 11\n      follower: Meteor.user().username,                                         // 12\n      following: username                                                       // 13\n    });                                                                         // 11\n  },                                                                            // 15\n                                                                                //\n  'recommendUsers': function recommendUsers() {                                 // 17\n    if (Meteor.user()) {                                                        // 18\n      var currentFollowings = UserUtils.findFollowings(Meteor.user().username);\n                                                                                //\n      var recUsers = Meteor.users.find({                                        // 21\n        username: {                                                             // 22\n          $nin: currentFollowings                                               // 23\n        }                                                                       // 22\n      }, {                                                                      // 21\n        fields: { 'username': 1 },                                              // 26\n        limit: 5                                                                // 27\n      }).fetch();                                                               // 25\n      return recUsers;                                                          // 29\n    }                                                                           // 30\n  }                                                                             // 31\n});                                                                             // 1\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"publications.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// server/publications.js                                                       //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nMeteor.publish('tweets', function () {                                          // 1\n  if (Meteor.userId) {                                                          // 2\n    var username = Meteor.users.findOne({ _id: this.userId }).username;         // 3\n    var currentFollowings = UserUtils.findFollowings(username);                 // 4\n    console.log(\"HOLIKI\");                                                      // 5\n    console.log(currentFollowings);                                             // 6\n    return Twitts.find({ user: { $in: currentFollowings } });                   // 7\n  }                                                                             // 8\n});                                                                             // 9\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"tweetBox.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// server/tweetBox.js                                                           //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nMeteor.methods({                                                                // 1\n  'insertTweet': function insertTweet(tweet) {                                  // 2\n    if (Meteor.user()) {                                                        // 3\n      Twitts.insert({                                                           // 4\n        message: tweet,                                                         // 5\n        user: Meteor.user().username,                                           // 6\n        timestamp: new Date()                                                   // 7\n      });                                                                       // 4\n    }                                                                           // 9\n  }                                                                             // 10\n});                                                                             // 1\n//////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/meteor\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////\n//                                                                              //\n// server/main.js                                                               //\n//                                                                              //\n//////////////////////////////////////////////////////////////////////////////////\n                                                                                //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});     // 1\n                                                                                //\nMeteor.startup(function () {                                                    // 3\n  // code to run on server at startup                                           //\n  Relationships._ensureIndex({ follower: 1, following: 1 }, { unique: 1 });     // 5\n                                                                                //\n  Twitts.allow({                                                                // 7\n    insert: function insert(userId, disconnect) {                               // 8\n      return true;                                                              // 9\n    }                                                                           // 10\n  });                                                                           // 7\n});                                                                             // 12\n//////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/collections/tweets.js\");\nrequire(\"./lib/userUtils.js\");\nrequire(\"./server/followUsers.js\");\nrequire(\"./server/publications.js\");\nrequire(\"./server/tweetBox.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/collections/tweets.js","/lib/userUtils.js","/server/followUsers.js","/server/publications.js","/server/tweetBox.js","/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,IAAI,OAAO,UAAX,CAAsB,QAAtB,CAAT;AACA,gBAAgB,IAAI,OAAO,UAAX,CAAsB,eAAtB,CAAhB,8B;;;;;;;;;;;ACDA,YAAY,qBAAW,CAAE,CAAzB,C;;AAEA,UAAU,cAAV,GAA2B,UAAS,QAAT,EAAmB;AAC5C,MAAI,oBAAoB,cAAc,IAAd,CAAmB;AACzC,cAAU;AAD+B,GAAnB,EAErB,KAFqB,GAEb,GAFa,CAET,UAAS,IAAT,EAAe;AAC5B,WAAO,KAAK,SAAZ;AACD,GAJuB,CAAxB;;AAMA,oBAAkB,IAAlB,CAAuB,OAAO,IAAP,GAAc,QAArC;AACA,SAAO,iBAAP;AACD,CATD,oF;;;;;;;;;;;ACFA,OAAO,OAAP,CAAe;AACb,cAAY,kBAAS,QAAT,EAAmB;AAC7B,WAAO,OAAO,KAAP,CAAa,OAAb,CAAqB;AAC1B,gBAAU;AADgB,KAArB,EAEJ;AACD,cAAQ,EAAE,YAAY,CAAd;AADP,KAFI,CAAP;AAKD,GAPY;;AASb,gBAAc,oBAAS,QAAT,EAAmB;AAC/B,kBAAc,MAAd,CAAqB;AACnB,gBAAU,OAAO,IAAP,GAAc,QADL;AAEnB,iBAAW;AAFQ,KAArB;AAID,GAdY;;AAgBb,oBAAkB,0BAAW;AAC9B,QAAI,OAAO,IAAP,EAAJ,EAAmB;AACjB,UAAI,oBAAoB,UAAU,cAAV,CAAyB,OAAO,IAAP,GAAc,QAAvC,CAAxB;;AAEA,UAAI,WAAW,OAAO,KAAP,CAAa,IAAb,CAAkB;AAC/B,kBAAU;AACR,gBAAM;AADE;AADqB,OAAlB,EAIZ;AACD,gBAAQ,EAAE,YAAY,CAAd,EADP;AAED,eAAO;AAFN,OAJY,EAOZ,KAPY,EAAf;AAQA,aAAO,QAAP;AACD;AACE;AA9BW,CAAf,mF;;;;;;;;;;;ACAA,OAAO,OAAP,CAAe,QAAf,EAAyB,YAAW;AAClC,MAAI,OAAO,MAAX,EAAmB;AACjB,QAAI,WAAW,OAAO,KAAP,CAAa,OAAb,CAAqB,EAAC,KAAK,KAAK,MAAX,EAArB,EAAyC,QAAxD;AACA,QAAI,oBAAoB,UAAU,cAAV,CAAyB,QAAzB,CAAxB;AACA,YAAQ,GAAR,CAAY,QAAZ;AACA,YAAQ,GAAR,CAAY,iBAAZ;AACA,WAAO,OAAO,IAAP,CAAY,EAAC,MAAM,EAAE,KAAK,iBAAP,EAAP,EAAZ,CAAP;AACD;AACF,CARD,mF;;;;;;;;;;;ACAA,OAAO,OAAP,CAAe;AACb,iBAAe,qBAAS,KAAT,EAAgB;AAC7B,QAAI,OAAO,IAAP,EAAJ,EAAmB;AACjB,aAAO,MAAP,CAAc;AACZ,iBAAS,KADG;AAEZ,cAAM,OAAO,IAAP,GAAc,QAFR;AAGZ,mBAAW,IAAI,IAAJ;AAHC,OAAd;AAKD;AACF;AATY,CAAf,mF;;;;;;;;;;;ACAA,SAAS,MAAT,QAAuB,eAAvB;;AAEA,OAAO,OAAP,CAAe,YAAM;;AAEnB,gBAAc,YAAd,CAA2B,EAAC,UAAU,CAAX,EAAc,WAAW,CAAzB,EAA3B,EAAwD,EAAC,QAAQ,CAAT,EAAxD;;AAEA,SAAO,KAAP,CAAa;AACd,YAAQ,gBAAS,MAAT,EAAiB,UAAjB,EAA6B;AAClC,aAAO,IAAP;AACF;AAHa,GAAb;AAKD,CATD,oF","file":"/app.js","sourcesContent":["Twitts = new Meteor.Collection('twitts');\r\nRelationships = new Meteor.Collection('relationships');","UserUtils = function() {};    //no var in front\r\n\r\nUserUtils.findFollowings = function(username) { \r\n  var currentFollowings = Relationships.find({\r\n    follower: username\r\n  }).fetch().map(function(data) {\r\n    return data.following;\r\n  });\r\n\r\n  currentFollowings.push(Meteor.user().username);\r\n  return currentFollowings;\r\n};\t","Meteor.methods({ \r\n  'findUser': function(username) {\r\n    return Meteor.users.findOne({\r\n      username: username\r\n    }, {\r\n      fields: { 'username': 1 }\r\n    });\r\n  },\r\n\r\n  'followUser': function(username) {\r\n    Relationships.insert({\r\n      follower: Meteor.user().username,\r\n      following: username\r\n    });\r\n  },\r\n\r\n  'recommendUsers': function() {\r\n\tif (Meteor.user()) {\r\n\t  var currentFollowings = UserUtils.findFollowings(Meteor.user().username);\r\n\r\n\t  var recUsers = Meteor.users.find({\r\n\t    username: {\r\n\t      $nin: currentFollowings\r\n\t    }\r\n\t  }, {\r\n\t    fields: { 'username': 1 },\r\n\t    limit: 5\r\n\t  }).fetch();\r\n\t  return recUsers;\r\n\t}\r\n   }\r\n});\r\n\r\n\r\n","Meteor.publish('tweets', function() {  \r\n  if (Meteor.userId) {\r\n    var username = Meteor.users.findOne({_id: this.userId}).username;\r\n    var currentFollowings = UserUtils.findFollowings(username);\r\n    console.log(\"HOLIKI\");\r\n    console.log(currentFollowings);\r\n    return Twitts.find({user: { $in: currentFollowings }});\r\n  }\r\n});","Meteor.methods({ \r\n  'insertTweet': function(tweet) {\r\n    if (Meteor.user()) {\r\n      Twitts.insert({\r\n        message: tweet,\r\n        user: Meteor.user().username,\r\n        timestamp: new Date()\r\n      });\r\n    }\r\n  }\r\n});","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n  Relationships._ensureIndex({follower: 1, following: 1}, {unique: 1});\n  \n  Twitts.allow({\n\tinsert: function(userId, disconnect) {\n\t   return true;\n\t}\n  });\n});\n"]}}]